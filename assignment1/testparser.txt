var i : array [ 1 .. 2 , 3 .. 4 ] of integer ; 
var i : array [ 1 .. 5 ] of integer ; 

var a , b , c : integer ;
d : array [ 1 .. 5 ] of integer ;
e , f : real ;

foo(2)[3+x] := a[b[2]] +3;

procedure foo ( a : array [ 1 .. 2 ] of real );
begin
end

procedure goo ( x : array [ 1 .. 2 ] of real ) ;
var
y : array [ 2 .. 3 ] of real ;
z : array [ 1 .. 2 ] of integer ;
begin
foo ( x ) ; //CORRECT
foo ( y ) ; //WRONG
foo ( z ) ; //WRONG
end

function foo ( ) : real ;
begin
if ( 1 ) then return 2.3 ; //CORRECT
else return 2 ; //CORRECT
end

function foo ( ) : real ;
begin
a := b [ 10 ] := foo ( ) [ 3 ] := x := 1 ;
end

function foo ( ) : real ;
begin
    if (1) then continue; else return 0;
end

function foo ( ) : real ;
begin
    while 1=1 do d:=a:=1;
end

function foo ( ) : real ;
begin
    foo(3,a+1,m(2));
end