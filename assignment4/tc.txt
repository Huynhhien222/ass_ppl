Testcase 1: Program([FuncDecl(Id(isPrime),[VarDecl(Id(n),IntType)],BoolType,[VarDecl(Id(flag),BoolType),VarDecl(Id(i),IntType)],[If(BinaryOp(or,BinaryOp(=,Id(n),IntLiteral(1)),BinaryOp(=,Id(n),IntLiteral(0))),[Return(Some(BooleanLiteral(False)))],[]),If(BinaryOp(or,BinaryOp(=,Id(n),IntLiteral(2)),BinaryOp(=,Id(n),IntLiteral(3))),[Return(Some(BooleanLiteral(True)))],[]),AssignStmt(Id(flag),BooleanLiteral(True)),For(Id(i)IntLiteral(2),BinaryOp(div,Id(n),IntLiteral(2)),True,[If(BinaryOp(=,BinaryOp(-,Id(n),BinaryOp(*,BinaryOp(div,Id(n),Id(i)),Id(i))),IntLiteral(0)),[AssignStmt(Id(flag),BooleanLiteral(False)),Break],[])]),Return(Some(Id(flag)))]),FuncDecl(Id(main),[],VoidType(),[],[CallStmt(Id(putBoolLn),[CallExpr(Id(isPrime),[IntLiteral(1)])]),CallStmt(Id(putBoolLn),[CallExpr(Id(isPrime),[IntLiteral(2)])]),CallStmt(Id(putBoolLn),[CallExpr(Id(isPrime),[IntLiteral(7)])]),CallStmt(Id(putBool),[CallExpr(Id(isPrime),[IntLiteral(14)])]),Return(None)])])
Testcase 2: Program([FuncDecl(Id(main),[],VoidType(),[],[CallStmt(Id(putFloat),[FloatLiteral(14.12)]),CallStmt(Id(putLn),[]),CallStmt(Id(putFloat),[FloatLiteral(14.12)]),Return(None)])])
Testcase 3: Program([FuncDecl(Id(main),[],VoidType(),[],[CallStmt(Id(putFloat),[BinaryOp(+,BinaryOp(/,BinaryOp(-,IntLiteral(8),IntLiteral(2)),IntLiteral(3)),BinaryOp(*,BinaryOp(/,IntLiteral(9),IntLiteral(3)),BinaryOp(/,IntLiteral(6),IntLiteral(2))))]),Return(None)])])
Testcase 4: Program([FuncDecl(Id(main),[],VoidType(),[VarDecl(Id(a),IntType)],[AssignStmt(Id(a),BinaryOp(+,BinaryOp(-,IntLiteral(10),BinaryOp(*,IntLiteral(9),IntLiteral(8))),BinaryOp(DIV,IntLiteral(6),IntLiteral(4)))),CallStmt(Id(putInt),[Id(a)]),Return(None)])])
Testcase 5: Program([FuncDecl(Id(main),[],VoidType(),[VarDecl(Id(a),BoolType)],[AssignStmt(Id(a),BinaryOp(>,BinaryOp(+,IntLiteral(3),IntLiteral(4)),IntLiteral(5))),If(Id(a),[With([VarDecl(Id(b),IntType)],[AssignStmt(Id(b),IntLiteral(3)),CallStmt(Id(putBoolLn),[BooleanLiteral(True)]),CallStmt(Id(putIntLn),[IntLiteral(3)])])],[CallStmt(Id(putBoolLn),[BooleanLiteral(False)])]),CallStmt(Id(putInt),[IntLiteral(1)]),Return(None)])])
Testcase 6: Program([FuncDecl(Id(main),[],VoidType(),[VarDecl(Id(count),IntType),VarDecl(Id(max),IntType),VarDecl(Id(check),IntType)],[AssignStmt(Id(count),IntLiteral(1)),AssignStmt(Id(max),IntLiteral(5)),AssignStmt(Id(check),IntLiteral(1)),While(BinaryOp(and,BinaryOp(<,Id(count),Id(max)),BinaryOp(<,Id(check),IntLiteral(10))),[CallStmt(Id(putInt),[Id(count)]),While(BinaryOp(<,Id(check),IntLiteral(5)),[CallStmt(Id(putInt),[Id(check)]),AssignStmt(Id(check),BinaryOp(+,Id(check),IntLiteral(1))),While(BinaryOp(<,Id(count),IntLiteral(3)),[AssignStmt(Id(count),BinaryOp(+,Id(count),IntLiteral(1)))])]),AssignStmt(Id(count),BinaryOp(+,Id(count),IntLiteral(1))),AssignStmt(Id(check),BinaryOp(+,Id(check),IntLiteral(1)))]),Return(None)])])
Testcase 7: Program([FuncDecl(Id(main),[],VoidType(),[VarDecl(Id(i),IntType),VarDecl(Id(j),IntType)],[For(Id(i)IntLiteral(1),BinaryOp(*,IntLiteral(5),IntLiteral(2)),True,[With([VarDecl(Id(k),IntType)],[AssignStmt(Id(k),BinaryOp(*,Id(i),IntLiteral(2))),If(BinaryOp(>,Id(i),IntLiteral(3)),[For(Id(j)IntLiteral(1),Id(k),True,[CallStmt(Id(putInt),[Id(j)])])],[])])]),Return(None)])])
Testcase 8: Program([FuncDecl(Id(main),[],VoidType(),[VarDecl(Id(i),IntType),VarDecl(Id(j),IntType)],[AssignStmt(Id(i),IntLiteral(0)),While(BinaryOp(<,Id(i),IntLiteral(10)),[AssignStmt(Id(j),IntLiteral(0)),While(BinaryOp(<,Id(j),IntLiteral(5)),[AssignStmt(Id(j),BinaryOp(+,Id(j),IntLiteral(1))),If(BinaryOp(>,Id(j),IntLiteral(2)),[Continue],[]),CallStmt(Id(putInt),[Id(j)])]),AssignStmt(Id(i),BinaryOp(+,Id(i),IntLiteral(1)))]),Return(None)])])
Testcase 9: Program([FuncDecl(Id(main),[],VoidType(),[VarDecl(Id(i1),IntType),VarDecl(Id(i2),IntType)],[For(Id(i1)IntLiteral(1),IntLiteral(10),True,[For(Id(i2)IntLiteral(1),IntLiteral(10),True,[CallStmt(Id(putInt),[Id(i2)]),If(BinaryOp(=,Id(i2),BinaryOp(-,Id(i1),IntLiteral(1))),[Continue],[]),If(BinaryOp(=,Id(i2),Id(i1)),[Break],[])]),If(BinaryOp(=,Id(i1),IntLiteral(3)),[Continue],[]),If(BinaryOp(=,Id(i1),IntLiteral(5)),[Break],[])]),Return(None)])])
Testcase 10: Program([VarDecl(Id(a),IntType),VarDecl(Id(b),IntType),VarDecl(Id(c),IntType),FuncDecl(Id(foo),[VarDecl(Id(i),IntType)],BoolType,[],[AssignStmt(Id(a),BinaryOp(+,Id(a),Id(i))),Return(Some(BinaryOp(>=,Id(i),IntLiteral(5))))]),FuncDecl(Id(main),[],VoidType(),[VarDecl(Id(x),BoolType)],[AssignStmt(Id(a),IntLiteral(0)),CallStmt(Id(putBoolLn),[BinaryOp(or,BinaryOp(or,BinaryOp(or,CallExpr(Id(foo),[IntLiteral(1)]),CallExpr(Id(foo),[IntLiteral(2)])),CallExpr(Id(foo),[IntLiteral(3)])),CallExpr(Id(foo),[IntLiteral(7)]))]),CallStmt(Id(putIntLn),[Id(a)]),AssignStmt(Id(a),IntLiteral(0)),CallStmt(Id(putBoolLn),[BinaryOp(orelse,BinaryOp(orelse,BinaryOp(orelse,CallExpr(Id(foo),[IntLiteral(1)]),CallExpr(Id(foo),[IntLiteral(2)])),CallExpr(Id(foo),[IntLiteral(3)])),CallExpr(Id(foo),[IntLiteral(4)]))]),CallStmt(Id(putIntLn),[Id(a)]),AssignStmt(Id(a),IntLiteral(0)),CallStmt(Id(putBoolLn),[BinaryOp(or,BinaryOp(or,BinaryOp(or,CallExpr(Id(foo),[IntLiteral(1)]),CallExpr(Id(foo),[IntLiteral(2)])),CallExpr(Id(foo),[IntLiteral(3)])),CallExpr(Id(foo),[IntLiteral(7)]))]),CallStmt(Id(putIntLn),[Id(a)]),AssignStmt(Id(a),IntLiteral(0)),CallStmt(Id(putBoolLn),[BinaryOp(orelse,BinaryOp(orelse,BinaryOp(or,CallExpr(Id(foo),[IntLiteral(1)]),CallExpr(Id(foo),[IntLiteral(2)])),CallExpr(Id(foo),[IntLiteral(5)])),CallExpr(Id(foo),[IntLiteral(7)]))]),CallStmt(Id(putInt),[Id(a)]),Return(None)])])
Testcase 11: Program([VarDecl(Id(a),IntType),VarDecl(Id(b),IntType),VarDecl(Id(c),IntType),FuncDecl(Id(main),[],VoidType(),[],[AssignStmt(Id(a),IntLiteral(1)),If(BinaryOp(=,Id(a),IntLiteral(1)),[With([VarDecl(Id(a),IntType)],[For(Id(a)IntLiteral(2),IntLiteral(3),True,[With([VarDecl(Id(b),IntType)],[CallStmt(Id(putIntLn),[Id(a)])])])])],[With([VarDecl(Id(a),IntType)],[For(Id(a)IntLiteral(7),IntLiteral(8),True,[With([VarDecl(Id(b),IntType)],[CallStmt(Id(putIntLn),[Id(a)])])])])]),With([VarDecl(Id(c),IntType)],[CallStmt(Id(putInt),[Id(a)])]),Return(None)])])
Testcase 12: Program([VarDecl(Id(m),ArrayType(1,100,IntType)),FuncDecl(Id(main),[],VoidType(),[],[AssignStmt(ArrayCell(Id(m),IntLiteral(1)),IntLiteral(1)),CallStmt(Id(putInt),[ArrayCell(Id(m),IntLiteral(1))]),Return(None)])])
Testcase 13: Program([FuncDecl(Id(mean),[VarDecl(Id(size),IntType)],FloatType,[VarDecl(Id(i),IntType),VarDecl(Id(s),IntType),VarDecl(Id(x),ArrayType(1,3,IntType))],[AssignStmt(ArrayCell(Id(x),IntLiteral(3)),IntLiteral(1)),AssignStmt(ArrayCell(Id(x),IntLiteral(1)),IntLiteral(3)),AssignStmt(ArrayCell(Id(x),IntLiteral(2)),IntLiteral(5)),AssignStmt(Id(s),IntLiteral(0)),For(Id(i)IntLiteral(1),Id(size),True,[AssignStmt(Id(s),BinaryOp(+,Id(s),ArrayCell(Id(x),Id(i))))]),Return(Some(BinaryOp(/,BinaryOp(+,Id(s),FloatLiteral(0.0)),Id(size))))]),FuncDecl(Id(main),[],VoidType(),[],[CallStmt(Id(putFloat),[CallExpr(Id(mean),[IntLiteral(3)])]),Return(None)])])
Testcase 14: Program([FuncDecl(Id(searchArr),[VarDecl(Id(m),ArrayType(1,5,IntType)),VarDecl(Id(a),IntType),VarDecl(Id(n),IntType)],IntType,[VarDecl(Id(i),IntType)],[For(Id(i)IntLiteral(1),Id(n),True,[If(BinaryOp(=,ArrayCell(Id(m),Id(i)),Id(a)),[Return(Some(Id(i)))],[])]),Return(Some(UnaryOp(-,IntLiteral(1))))]),FuncDecl(Id(main),[],VoidType(),[VarDecl(Id(j),IntType),VarDecl(Id(result),IntType),VarDecl(Id(arr),ArrayType(1,5,IntType))],[For(Id(j)IntLiteral(1),IntLiteral(5),True,[AssignStmt(ArrayCell(Id(arr),Id(j)),BinaryOp(+,Id(j),IntLiteral(1)))]),AssignStmt(Id(result),CallExpr(Id(searchArr),[Id(arr),IntLiteral(3),IntLiteral(5)])),CallStmt(Id(putInt),[Id(result)]),Return(None)])])
Testcase 15: Program([VarDecl(Id(arr),ArrayType(1,5,IntType)),FuncDecl(Id(searchArr),[VarDecl(Id(d),ArrayType(1,5,IntType)),VarDecl(Id(a),IntType),VarDecl(Id(n),IntType)],IntType,[VarDecl(Id(i),IntType)],[For(Id(i)IntLiteral(1),Id(n),True,[AssignStmt(ArrayCell(Id(d),Id(i)),Id(i))]),Return(Some(ArrayCell(Id(arr),IntLiteral(1))))]),FuncDecl(Id(main),[],VoidType(),[VarDecl(Id(j),IntType),VarDecl(Id(result),IntType)],[AssignStmt(ArrayCell(Id(arr),IntLiteral(1)),IntLiteral(5)),AssignStmt(ArrayCell(Id(arr),IntLiteral(2)),IntLiteral(3)),AssignStmt(ArrayCell(Id(arr),IntLiteral(3)),IntLiteral(11)),AssignStmt(ArrayCell(Id(arr),IntLiteral(4)),IntLiteral(19)),AssignStmt(ArrayCell(Id(arr),IntLiteral(5)),IntLiteral(20)),AssignStmt(Id(result),CallExpr(Id(searchArr),[Id(arr),IntLiteral(3),IntLiteral(5)])),CallStmt(Id(putInt),[Id(result)]),Return(None)])])